token literal names:
null
'return'
'var'
'dynamic'
'func'
'for'
'until'
'by'
'break'
'continue'
'if'
'else'
'elif'
'begin'
'end'
'number'
'boolean'
'string'
'=='
'...'
'<-'
'>='
'>'
'<='
'<'
'!='
'='
'or'
'and'
'not'
'%'
'+'
'-'
'*'
'/'
'true'
'false'
'('
')'
'['
']'
'{'
'}'
','
null
null
null
null
null
null
null
null
null

token symbolic names:
null
RETURN_KEY
VAR_KEY
DYNAMIC_KEY
FUNC_KEY
FOR_KEY
UNTIL_KEY
BY_KEY
BREAK_KEY
CONTINUE_KEY
IF_KEY
ELSE_KEY
ELIF_KEY
BEGIN_KEY
END_KEY
NUM_TYPE
BOOL_TYPE
STRING_TYPE
EQUAL_OPERATOR
CONCAT_OPERATOR
ASSIGN1_OPERATOR
GE_OPERATOR
G_OPERATOR
LE_OPERATOR
L_OPERATOR
NE_OPERATOR
ASSIGN2_OPERATOR
OR_OPERATOR
AND_OPERATOR
NOT_OPERATOR
MODULO_OPERATOR
ADD_OPERATOR
SUB_OPERATOR
MUL_OPERATOR
DIV_OPERATOR
TRUE_BOOLEAN
FALSE_BOOLEAN
LB
RB
LSB
RSB
LPT
RPT
COMMA
COMMENT
IDENTIFIERS
NUMBER
STRINGLIT
UNCLOSE_STRING
ILLEGAL_ESCAPE
WS
NEW_LINE
ERROR_CHAR

rule names:
program


atn:
[4, 1, 52, 5, 2, 0, 7, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 0, 2, 1, 0, 0, 0, 2, 3, 5, 0, 0, 1, 3, 1, 1, 0, 0, 0, 0]